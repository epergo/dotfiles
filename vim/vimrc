set nocompatible

syntax on
filetype plugin indent on

let mapleader=","

" Auto installation of Vim Plug
" https://github.com/junegunn/vim-plug/wiki/tips#automatic-installation
" if empty(glob('~/.vim/autoload/plug.vim'))
"   silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
"         \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
"   autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
" endif

call plug#begin()

Plug 'tpope/vim-sensible'            " Set of VIM defaults
Plug 'mileszs/ack.vim'               " ACK
Plug 'haishanh/night-owl.vim'
Plug '/usr/local/opt/fzf'
Plug 'junegunn/fzf.vim'              " Fuzzy Finder
Plug 'w0rp/ale'                      " Async static analysis

Plug 'itchyny/lightline.vim'

Plug 'scrooloose/nerdtree'           " Nerdtree
Plug 'easymotion/vim-easymotion'

Plug 'tpope/vim-fugitive'            " Git integration
Plug 'airblade/vim-gitgutter'        " Show modified files in the gutter

" Styles
Plug 'godlygeek/CSApprox'
Plug 'ryanoasis/vim-devicons'
Plug 'srcery-colors/srcery-vim'
Plug 'patstockwell/vim-monokai-tasty'
Plug 'flazz/vim-colorschemes'
Plug 'rafi/awesome-vim-colorschemes'
" Plug 'ayu-theme/ayu-vim'
" Plug 'chriskempson/base16-vim'


Plug 'ludovicchabant/vim-gutentags'

Plug 'tpope/vim-bundler'
Plug 'vim-ruby/vim-ruby'
" Plug 'rhysd/vim-crystal'
Plug 'fatih/vim-go' " , { 'do': ':GoUpdateBinaries' }
Plug 'tpope/vim-rails'
" Plug 'elixir-lang/vim-elixir'
" Plug 'digitaltoad/vim-pug'
" Plug 'elorest/vim-slang'
" Plug 'posva/vim-vue'

call plug#end()

" Fix styles when using tmux
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

let g:lightline = { 'colorscheme': 'wombat' } " srcery

" Plugins I've tried and like! => [molokai, ayu, PaperColor, srcery, vim-material, night-owl, vim-monokai-tasty]
" colorscheme molokai
colorscheme vim-monokai-tasty

"" ReMaps
inoremap jj <esc>
nnoremap Q <nop>

" Save shortcuts
nnoremap <Leader>x :x<cr>
nnoremap <Leader>q :q<cr>
nnoremap <Leader>s :update<cr>
nnoremap <C-s> :update<cr>

" Quit shortcuts
inoremap <C-Q> <esc>:q<cr>
nnoremap <C-Q> :q<cr>
vnoremap <C-Q> <esc>

let g:webdevicons_conceal_nerdtree_brackets = 0
let g:DevIconsEnableNERDTreeRedraw = 1

set termguicolors
set t_ut=
set clipboard=unnamed
set guifont=FuraCode\ \Nerd\ Font\ 11
set mouse=a                                       " Enable mouse mode
set number                                        " Show line numbers
set cursorline                                    " Highlight current linenumber
set relativenumber
set nowrap                                        " No wrap
set noswapfile                                    " Disable swap file
set expandtab                                     " Indent with 2 spaces
set shiftwidth=2
set softtabstop=2
set tabstop=2
set shiftround
set splitbelow                                    " Open new split panes to right and bottom, which feels more natural
set splitright
set scrolloff=8                                   "Start scrolling when we're 8 lines away from margins
set sidescrolloff=15
set sidescroll=1
set hlsearch                                      " Highlight searches by default
set ignorecase                                    " Ignore case when searching...
set smartcase                                     " ...unless we type a capital
set signcolumn=yes
set t_Co=256
set fillchars+=vert:\|

map <Leader>m <Plug>(easymotion-bd-f)
nmap <Leader>m <Plug>(easymotion-bd-f)

" Quicker window movement
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

" Quicker tab movement
nnoremap tl :tabnext<CR>
nnoremap th :tabprev<CR>
nnoremap tn :tabnew<CR>

" Shortcuts to open NERDTree
nnoremap <Leader>t :NERDTreeToggle<RETURN>
nnoremap <Leader>e :NERDTreeFind<RETURN>

" Show hidden by default in NerdTree
let NERDTreeShowHidden = 1
let g:NERDTreeHighlightCursorline = 0
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

" Git gutter symbols
let g:gitgutter_sign_added = '·'
let g:gitgutter_sign_modified = '·'
let g:gitgutter_sign_removed = '·'
let g:gitgutter_sign_removed_first_line = '·'
let g:gitgutter_sign_modified_removed = '·'

" Use FSF as fuzzy finder inside VIM
if executable('fzf')
  nnoremap <C-p> :FZF<RETURN>
  set rtp+=~/.fzf

  " command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --no-ignore --hidden --follow --glob "!.git/*" --color "always" '.shellescape(<q-args>), 1, <bang>0)
  command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --no-ignore --hidden --follow --glob "!.git/*" --color "always" '.shellescape(<q-args>).'| tr -d "\017"', 1, <bang>0)
endif

cnoreabbrev Ack Ack!
nnoremap <Leader>f :Find<Space>

" Go to definition
nnoremap <Leader>d <C-]>

let g:fzf_colors =
      \ { 'fg':      ['fg', 'Normal'],
      \ 'bg':      ['bg', 'Normal'],
      \ 'hl':      ['fg', 'Comment'],
      \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
      \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
      \ 'hl+':     ['fg', 'Statement'],
      \ 'info':    ['fg', 'PreProc'],
      \ 'border':  ['fg', 'Ignore'],
      \ 'prompt':  ['fg', 'Conditional'],
      \ 'pointer': ['fg', 'Exception'],
      \ 'marker':  ['fg', 'Keyword'],
      \ 'spinner': ['fg', 'Label'],
      \ 'header':  ['fg', 'Comment'] }

" ----------------------------------------------------------------------------
" ale
" ----------------------------------------------------------------------------
nnoremap <Leader>a :ALEFix<cr>
let g:ale_set_loclist = 1
let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'
let g:ale_fixers = {
      \   'ruby': ['rubocop'],
      \}
let g:ale_linters = {
      \   'ruby': ['rubocop'],
      \}

let g:ale_sign_error = '>'
let g:ale_sign_warning = '-'
let g:ale_ruby_rubocop_executable = 'bundle' 

set noshowmode " Hide reduntant vim mode

let g:go_fmt_command = "goimports"
let g:go_fmt_fail_silently = 1

let g:go_fmt_command='goimports'

augroup numbertoggle
  autocmd!
  autocmd InsertLeave * set relativenumber
  autocmd InsertEnter   * set norelativenumber
augroup END
